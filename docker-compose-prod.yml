services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "${REACT_PORT}:${REACT_PORT}"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - DJANGO_DEBUG=false
      - DJANGO_BASE_BACKEND_URL=${DJANGO_BASE_BACKEND_URL}
      - DJANGO_BASE_FRONTEND_URL=${DJANGO_BASE_FRONTEND_URL}
      - DJANGO_CORS_ORIGIN_WHITELIST=${DJANGO_CORS_ORIGIN_WHITELIST}
      - DJANGO_LANGUAGE_CODE=${DJANGO_LANGUAGE_CODE}
      - DJANGO_TIME_ZONE=${DJANGO_TIME_ZONE}
      - SECRET_KEY=${SECRET_KEY}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - SECURE_CONTENT_TYPE_NOSNIFF=${SECURE_CONTENT_TYPE_NOSNIFF}
      - MAILHOG_UI_PORT=${MAILHOG_UI_PORT}
      - MAILHOG_SMTP_PORT=${MAILHOG_SMTP_PORT}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - USE_S3=${USE_S3}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
    depends_on:
      - database
      - mailhog
      - redis
    networks:
      - app-network

  database:
    image: postgres:15.10-alpine
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "${MAILHOG_UI_PORT}:${MAILHOG_UI_PORT}"
      - "${MAILHOG_SMTP_PORT}:${MAILHOG_SMTP_PORT}"
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: always
    networks:
      - app-network

  celery:
    container_name: celery
    build:
      context: ./backend
    command: celery -A apps.tasks worker --loglevel=debug --without-gossip --without-mingle --without-heartbeat
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - DJANGO_DEBUG=false
      - DJANGO_BASE_BACKEND_URL=${DJANGO_BASE_BACKEND_URL}
      - DJANGO_BASE_FRONTEND_URL=${DJANGO_BASE_FRONTEND_URL}
      - DJANGO_CORS_ORIGIN_WHITELIST=${DJANGO_CORS_ORIGIN_WHITELIST}
      - DJANGO_LANGUAGE_CODE=${DJANGO_LANGUAGE_CODE}
      - DJANGO_TIME_ZONE=${DJANGO_TIME_ZONE}
      - SECRET_KEY=${SECRET_KEY}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - SECURE_CONTENT_TYPE_NOSNIFF=${SECURE_CONTENT_TYPE_NOSNIFF}
      - MAILHOG_UI_PORT=${MAILHOG_UI_PORT}
      - MAILHOG_SMTP_PORT=${MAILHOG_SMTP_PORT}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    depends_on:
      - backend
      - redis
      - database
    networks:
      - app-network

  celery_beat:
    container_name: celery_beat
    build:
      context: ./backend
    command: celery -A apps.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - DJANGO_DEBUG=false
      - DJANGO_BASE_BACKEND_URL=${DJANGO_BASE_BACKEND_URL}
      - DJANGO_BASE_FRONTEND_URL=${DJANGO_BASE_FRONTEND_URL}
      - DJANGO_CORS_ORIGIN_WHITELIST=${DJANGO_CORS_ORIGIN_WHITELIST}
      - DJANGO_LANGUAGE_CODE=${DJANGO_LANGUAGE_CODE}
      - DJANGO_TIME_ZONE=${DJANGO_TIME_ZONE}
      - SECRET_KEY=${SECRET_KEY}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - SECURE_CONTENT_TYPE_NOSNIFF=${SECURE_CONTENT_TYPE_NOSNIFF}
      - MAILHOG_UI_PORT=${MAILHOG_UI_PORT}
      - MAILHOG_SMTP_PORT=${MAILHOG_SMTP_PORT}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    depends_on:
      - backend
      - redis
      - celery
      - database
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:

